AMBuild is the build system AlliedMods uses to compile AMXModX, MetaMod: Source, and SourceMod.

Prerequisites:

1. Python 2.6 or newer.
2. Mercurial client.

Installing AMBuild:
1. Use Mercurial to clone the AMBuild repository: https://hg.alliedmods.net/ambuild/
2. Run python setup.py build
3. Run python setup.py install

To configure your project to use AMBuild, it helps if you have experience editing the Makefile for compiling Linux extensions by hand.

Note: The files included in the sample extension assume that your extension files live directly in the sample's directory.  If this is not the case, several locations in AMBuilder and PackageScript will need to be updated.

1. Open AMBuilder.  Near the bottom are several binary.AddSourceFiles entries.
   Basically, you'll want to edit the second of these lines to reference any additional files you need compiled.

   For instance, if you have a second file named natives.cpp, the line should look like this:
	binary.AddSourceFiles(['extension.cpp', 'natives.cpp'])

2. Open AMBuildScript.

   Near the bottom is this line:
        AMBuild.Include(os.path.join('buildbot', 'Versioning'), globals)

   This will attempt to retrieve the version number from a Mercurial repository.  If you are using Git instead, change this to:
        AMBuild.Include(os.path.join('buildbot', 'VersioningGit'), globals)

   If you aren't using versioning at all, comment this out, but be aware that this leaves other fields in the final build info blank.

3. Edit product.version to have the extension's version number in it.

4. Edit version.h to have your extension's version and binary name in it. This is optional and only used if you manually include version.rc and version.h in your VC++ project and compile manually.

5. Edit version.rc to have your extension's copyright information in it.

6. Edit buildbot/PackageScript.  About halfway down, these is a list named folders.  Add any folders you need created to this list using the format provided.
   addons/sourcemod should normally be present in this list.
   Just below that is a section labeled Copy Files.  The first lines are the place where the where said files are located, the second lines are where they should be copied to.
   Any destination directories should have been added to the folders list.

Once everything is set up in the files, to actually run the compiler:

python configure.py

python build.py

